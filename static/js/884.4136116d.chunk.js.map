{"version":3,"file":"static/js/884.4136116d.chunk.js","mappings":"iOAwEA,UAlEqB,SAAAA,GACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACQC,EAAAA,EAAAA,IAAkBT,GAD1B,OACVU,EADU,OAEhBJ,EAAgBI,GAFA,2CAAH,qDAKfF,GAED,GAAE,IAEH,IAakBG,EAbZC,GAA0B,OAAZP,QAAY,IAAZA,OAAA,EAAAA,EAAcO,cAAe,GAC3CC,GAAoB,OAAZR,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,QAAS,GAC/BC,GAAqB,OAAZT,QAAY,IAAZA,OAAA,EAAAA,EAAcS,SAAU,GACjCC,GAA2B,OAAZV,QAAY,IAAZA,OAAA,EAAAA,EAAcU,eAAgB,GAC7CC,GAA2B,OAAZX,QAAY,IAAZA,OAAA,EAAAA,EAAcW,eAAgB,EAC7CC,GAAuB,OAAZZ,QAAY,IAAZA,OAAA,EAAAA,EAAcY,WAAY,GAgB3C,GAAIZ,EACF,OACE,iCACE,mBAAQa,QAPO,WACnBhB,GAAU,EACX,EAKK,sBACA,gBAAKiB,IAAG,0CAAqCP,GAAeQ,IAAI,MAChE,kCAAQP,EAAR,YAnBiB,SAAAE,GACrB,OAAOA,EAAaM,MAAM,KAAK,EAChC,CAiBsBC,CAAeP,GAAhC,QACA,yCAdYJ,EAccK,EAb9BL,EAAaA,EAAWY,QAAQ,GAC1B,GAAN,OAAuB,GAAbZ,EAAV,UAaI,sCACA,uBAAIM,KACJ,wBApBY,SAAAH,GAChB,OAAOA,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC7C,CAkBUC,CAAUd,MACf,mBACA,mDACA,2BACE,SAAC,KAAD,CAAMe,GAAE,kBAAa7B,EAAb,SAAR,mBAEA,SAAC,KAAD,CAAM6B,GAAE,kBAAa7B,EAAb,YAAR,yBAEF,mBACA,SAAC,EAAA8B,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAKT,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useNavigate, useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types'\n\nimport { fetchMovieDetails } from 'moviesAPI/fetchMoviesData';\n\nconst MovieDetails = props => {\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const movieData = await fetchMovieDetails(movieId);\n      setMovieDetails(movieData);\n    };\n\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const poster_path = movieDetails?.poster_path || '';\n  const title = movieDetails?.title || '';\n  const genres = movieDetails?.genres || [];\n  const release_date = movieDetails?.release_date || '';\n  const vote_average = movieDetails?.vote_average || 0;\n  const overview = movieDetails?.overview || '';\n\n  const getReleaseYear = release_date => {\n    return release_date.split('-')[0];\n  };\n  const getGenres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n  const getRating = ratingData => {\n    ratingData = ratingData.toFixed(1);\n    return `${ratingData * 10}%`;\n  };\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  if (movieDetails) {\n    return (\n      <>\n        <button onClick={handleGoBack}>Go back</button>\n        <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt=\"\" />\n        <h2>{`${title}(${getReleaseYear(release_date)})`}</h2>\n        <p>User Score: {getRating(vote_average)}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>{getGenres(genres)}</h4>\n        <hr />\n        <p>Additional information</p>\n        <ul>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </ul>\n        <hr />\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  }\n};\n\n// MovieDetails.propTypes = {}\n\nexport default MovieDetails;\n"],"names":["props","movieId","useParams","navigate","useNavigate","useState","movieDetails","setMovieDetails","useEffect","fetchData","fetchMovieDetails","movieData","ratingData","poster_path","title","genres","release_date","vote_average","overview","onClick","src","alt","split","getReleaseYear","toFixed","map","genre","name","join","getGenres","to","Suspense","fallback"],"sourceRoot":""}